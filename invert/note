#adj cpu
bias : 0.002 ms
1 : 0.0154  2.32
2 : 0.0235  2.34
3 : 0.0266  2.39
4 : 0.0328  2.69
5 : 0.0553  4.51
6 : 0.185  17.52
7 : 1.21  56.6
8 : 10.4  373
9 : 105  4375
10 : 1130  51433
11 : 13500

8 : 0.004  0.137
16 : 0.021  0.225
32 : 0.153  0.448
64 : 1.21  0.864
128 : 9.83  2.02
256 : 78.9  7.59
512 : 619  44.3
1024 : 5160  263

推测是因为当矩阵过大，则寻址时的时延越大，因为此时的空间局部性下降了，则大部分时间消耗在IO操作上，导致了线程堵塞在IO操作的比例增加。也有原因是存入的矩阵过大，则无法再将数据全部存储在较高层的缓存上，故IO操作时间变长。
曾经试过将读如的数据存储在共享内存上，速度可提高大约1/3，但当矩阵大小大于32*32时，无法将完整的矩阵操作在一个线程块上进行，当矩阵各点分布在不同线程块上时，共享内存需要进行同步，这需要花费一定的时间并且不一定有明显提升，故我未再完成该优化。
